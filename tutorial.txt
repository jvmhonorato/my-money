1: npm install axios react-router-dom

2:apagar as gorduras import o react, axios

3: passar a URL gerada no firebase no axios.get('http://')

4: passar axios.post('http://') pra adiconar dados

5: passar URL do DB firebase em uma const url 

6: usar o axios.get() dentro do useEffect

7: passar o useState pra mostra os dados na tela

STATE
8: criar um state loading, setLoading atrelado a um bollean originalmente 'true', passar no useEffect() com 'false' no final, 

usar
REDUCE
9: Usar o reduce com o loading e o data atrelado a uma condicinal booleana, em seguida retonar na funçao useGet usePost e exportar pra App.js

10:em seguida criar uma condicional pra pra retornar loading... enquanto tiver carregando o useEffect()  1: com if(loading){return <h2>loading..</h2>}  2:dentro de JSX: 
{loading && <h2>Loading...</h2>}


useGet.js
11:Criar componente useGet.js com função reduce em seguida usar essa função como parãmetro do hook useReduce dentro da função useGet, passar uma axios.get dentro do useEffect retornando a condicional atrelada ao reduce, dar um return em data

usePost.js
12:Criar componente usePost.js com função reduce em seguida usar ela como parãmetro do hook useReduce dentro da função usePost, passar um axios.post dentro de uma fuunção post() retornando a condicional atrelada ao reduce   e dar um retunr [data, post]

useDelete.js 
13:Criar componente useDelete.js com a função reduce em seguida passar ela como parãmetro do hook useReduce dentro da função usedelete, passar um axios.delete dentro da função remove atrelada a condicinal reduce retorando [data, remove]


DINAMYC SAVE BUTTON

15: EM seguida criar uma função newSave  e dentro dela chmar a função post({valor: x, descricao: y}) com o objetos e seus valores dentro
16: Criar uma função doRemove com a função remove(url) que vem de useDelete, e, seguida criar um <button> com o evento onClick chamndo essa função 

REST
17: criar rest.js criar dentro dele a função init com baseURL como parâmetro, com a função useGet(), getPost(), getDelete() dentro dela exportar init
e importar em App.js Rest, 

No axios.post(baseURL + resource +'.json'), axios.get(baseURL + resource + '.json', data)

18:Em App.js estanciar em baseURL a url básica do firebase, em seguida abstrair o useGet, usePost e useDelete de rest passando o parâmetro baseURL: const {useGet, usePost, useDelete} = Rest(baseURL) depois chamr as funções passando o resource useGet('movimentacoes/2022-10')  usePost('movimentacoes/2022-10')




INSTALL BOOTSTRAP
19: npm install bootstrap,  import em index.js  import 'bootstrap/dist/css/bootstrap.css'


20: Add Navbar em App.js

21: passar os <select> com seus <option value='01'> com os valores em value 

22: passar o useGet('meses'), criar os dados n firebase passando os inputs e outputs no resource: meses

23: crir uma <table> pra retornar os dados dentro de <tbody> passar o Object.key(data.data).map() passar os valores vindo de data com a key={} na tag <tr key={mes}>  e depois passar os dados: <td>{data.data[mes].input_forecast}</td> output_forecast, input e output



TRACK ROUTES: instalar o react-router-dom: npm install react-router-dom


24: crair pasta src/elements e componetizar o <Header/>

25: criar componete Meses.js exportar dados pra App.js

26 Criar componente AddMes.js e exportar dados pra App.js           X

Criar o componente Movimentacoes.js  e trackiar a rota em App.js dinamicamente:    <Route exact path="/movimentacoes/:data" element={<Movimentacoes/>}/>

instalar o react-router-dom: npm install react-router-dom


27: EM Meses.js importar Link de React pra linkar os meses, depois passar o Link pra ser direcionado dinamicamente:
<td><Link to={`/movimentacoes/${mes}`}>{mes}</Link></td> clicando 


28: criar diretorio pages depois criar pasta pages/home/index.js e por todos os componente pertinentes a home dentro de da pasta home

29: Criar pasta utils e mover rest.js, useGet.js, usePost.js, useDelete.js pra lá


MOVIMENTACOES FIREBASE 
30: Em pages/Movimentacoes.js criar componete trackeado dinamicamente vindo de App.jscom o :data, usar useParams pra linkar e chamar na função useGet os dados movimentacoes vindo do firebase

OBS: No firebase usar como ID "a1" pois somente o numero retorna NULL